var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = OscoNet","category":"page"},{"location":"#OscoNet","page":"Home","title":"OscoNet","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for OscoNet.","category":"page"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [OscoNet]","category":"page"},{"location":"#OscoNet.bootstrap_hypothesis_test-Tuple{Any, Int64}","page":"Home","title":"OscoNet.bootstrap_hypothesis_test","text":"Arguments\n\nReturns\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.cooscillation_distance-Tuple{Any, Any, AbstractFloat}","page":"Home","title":"OscoNet.cooscillation_distance","text":"Distance function for two co-oscillating genes across N cells. We assume genes have identical sinusoidal expression profiles, except for a phase shift Ψ.\n\nArguments\n\nX: Expression of gene X from N cells\nY: Expression of gene Y from the same N cells\ncosΨ::AbstractFloat: Cosine of the phase shift, Ψ\n\nReturns\n\nd::AbstractFloat: Distance between the two genes for a given Ψ\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.create_edge_network-Tuple{Any, Any, Any}","page":"Home","title":"OscoNet.create_edge_network","text":"CreateEdgeNetwork - Create Edge file. This is needed before hypothesis test q-value derived adjacency matrix can be consumed by R network analysis code. Return a pandas dataframe with 3 columns, two gene names for the gene-pair and the cost value\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.find_best_psi_for_each_gene_pair-Tuple{Any}","page":"Home","title":"OscoNet.find_best_psi_for_each_gene_pair","text":"Arguments\n\nReturns\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.find_minimum_distance-Tuple{Any, Any}","page":"Home","title":"OscoNet.find_minimum_distance","text":"Find the minimum distance between two genes X and Y, and the value of Ψ that minimises it.\n\nArguments\n\nX: Expression of gene X from N cells\nY: Expression of gene Y from the same N cells\n\nReturns\n\nminimum::AbstractFloat: Minimum distance between gene X and Y\nminimiser::AbstractFloat: Value of Ψ that minimises the distance\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.get_metrics_for_different_qvalue_thresholds-Tuple{Any, Any, Any}","page":"Home","title":"OscoNet.get_metrics_for_different_qvalue_thresholds","text":"Get true positive, false discovery and false positive rates :param qvalues: qvalue G X G matrix where G=number of genes :param adjMatrixtrue: GXG binary adjacency matrix of true gene pairs :param alphavalues: one dimensional vector for threshold values :return: TPR, FDR, FPR vector of same size as alpha_values\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.get_permuted_cost-Tuple{Any, Int64}","page":"Home","title":"OscoNet.get_permuted_cost","text":"Arguments\n\ndata::: G X N tensor of gene expression\nn_permutations::Int: number of bootstrap permutations\n\nReturns\n\ncost_permuted::Array{Float64}: permuted cost\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.get_pvalues-Tuple{Any, Any}","page":"Home","title":"OscoNet.get_pvalues","text":"Get pvalues from bootstrap\n\nArguments\n\ncost_unpermuted: G X G - only upper triangular used\ncost_permuted: G X G X n permutations\n\n#Returns\n\npvalues\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.qvalue_estimate-Tuple{Any}","page":"Home","title":"OscoNet.qvalue_estimate","text":"Estimates qvalues from pvalues\n\nArguments\n\npvalues: \nm: number of tests. If not specified m = length(pvalues)\nverbose::Bool: print verbose messages (default is false)\npi0: if None, it's estimated as suggested in Storey and Tibshirani, 2003.\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.simulate_data-Tuple{}","page":"Home","title":"OscoNet.simulate_data","text":"Generate synthetic data. Reproduced from the original Oscope paper\n\nIncluded below is the original description from the supplementary material of that paper:\n\nSim I: Oscope paper supplementary\n\n1000 genes and 100 cells.  90 out of the 1000 genes were  simulated  as  oscillators. The 90 oscillators were simulated in 3 frequency groups, each group contains 30 genes. Group 1 and 3 follow the same order, while genes in group 2 follow another order.\n\nThe relative speeds of the 3 groups are proportional to 2:3:6. Within each frequency group, genes were further simulated with strong and weak signals. Half of the oscillatory genes were simulated as strong oscillators with σ_g = σ_str. The other half were simulated as weak oscillators with σ_g = 2σ_str. Starting Ψ Ψ_g varies in different genes within a frequency group. The remaining genes except the oscillators are called noise genes. Noise genes were simulated as random Gaussian noise. The noise level was adjusted to be comparable to the average noise signal among all oscillators. The σ_str varies from 0.05 to 0.4 in 5 steps.\n\nArguments\n\nhalf_group::Int=15: Half the size of each gene group. For example if half_group=3, each group will have 6 co-oscillating genes, 3 of which \n\nwill be strong oscillators and 3 weak (double the noise)\n\nn_genes::Int=1000: Total number of genes\nn_cells::Int=100: Total number of cells\nnoise_level::Int=1: Noise level index (1 to 6)\nn_groups::Int=3: Number of groups\n\nReturns\n\ndata::Matrix{<:AbstractFloat}: Simulated gene expression data with shape n_genes x n_cells \nΨ_g::Vector{<:AbstractFloat: Vector of phases for each gene\nω::Vector{<:AbstractFloat}: Vector of angular speeds for each gene\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.true_adj_matrix-Tuple{Int64, Vector{<:AbstractFloat}}","page":"Home","title":"OscoNet.true_adj_matrix","text":"Construct the ground truth adjacency matrix for a given numer of genes and ω vector. Intended for use with output from the simulate_data function.\n\nArguments\n\nn_genes::Integer: Total number of genes\nω::Vector{<:AbstractFloat}: Vector of angular speeds\n\nReturns\n\nadj_mat::Matrix{Bool}: Boolean matrix which is 1 if genes co-oscillate, and 0 otherwise\n\n\n\n\n\n","category":"method"},{"location":"#OscoNet.vec_triu_loop-Union{Tuple{AbstractMatrix{T}}, Tuple{T}} where T","page":"Home","title":"OscoNet.vec_triu_loop","text":"A function to return the elements of the (strict) upper triangle of a matrix, M, as a vector\n\n\n\n\n\n","category":"method"}]
}
