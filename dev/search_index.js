var documenterSearchIndex = {"docs":
[{"location":"examples/real-data/#Application-to-real-data","page":"Application to real data","title":"Application to real data","text":"","category":"section"},{"location":"lib/internals/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"lib/internals/","page":"Internals","title":"Internals","text":"Documentation for OscoNet.jl's internal functions.","category":"page"},{"location":"lib/internals/","page":"Internals","title":"Internals","text":"See the Public Documentation section for documentation of the public interface.","category":"page"},{"location":"lib/internals/#Index","page":"Internals","title":"Index","text":"","category":"section"},{"location":"lib/internals/","page":"Internals","title":"Internals","text":"Pages = [\"internals.md\"]","category":"page"},{"location":"lib/internals/#Internal-Interface","page":"Internals","title":"Internal Interface","text":"","category":"section"},{"location":"lib/internals/","page":"Internals","title":"Internals","text":"Modules = [OscoNet]\nPublic = false\nPrivate = true","category":"page"},{"location":"lib/internals/#OscoNet.calculate_error_rates-Tuple{Any, Any}","page":"Internals","title":"OscoNet.calculate_error_rates","text":"Arguments\n\n\n\nReturns\n\n\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#OscoNet.construct_symmetric_matrix_from_upper_triangular_vector-Tuple{Any}","page":"Internals","title":"OscoNet.construct_symmetric_matrix_from_upper_triangular_vector","text":"Construct a symmetric matrix with Inf diagonal values using a vector whose length is a triangular number. This vector is intended to be the output of vec_triu_loop.\n\nExamples\n\njulia> using OscoNet\n\njulia> A = [1 2 3; 4 5 6; 7 8 9]\n3×3 Matrix{Int64}:\n 1  2  3\n 4  5  6\n 7  8  9\n\njulia> A_flatten = OscoNet.vec_triu_loop(A)\n3-element Vector{Int64}:\n 2\n 3\n 6\n\njulia> OscoNet.construct_symmetric_matrix_from_upper_triangular_vector(A_flatten)\n3×3 Matrix{Float64}:\n Inf    2.0   3.0\n  2.0  Inf    6.0\n  3.0   6.0  Inf\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#OscoNet.find_best_psi_for_each_gene_pair-Tuple{Any}","page":"Internals","title":"OscoNet.find_best_psi_for_each_gene_pair","text":"Compute the minimum distance between gene x and gene y, for a set of genes x, y ∈ X. \n\nArguments\n\ndata::Matrix: Matrix of size (ngenes x ncells), whose elements represent gene expression.\n\nReturns\n\nΨ::Array{Float64}: Array of size (ngenes x ngenes), whose (x,y)-th element\n\nrepresents the phase shift Ψ between gene x and gene y.\n\ndistance::Array{Float64}: Array of size (ngenes x ngenes), whose (x,y)-th element\n\nrepresents the minimum distance d between gene x and gene y.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#OscoNet.get_metrics_for_different_qvalue_thresholds-Tuple{Any, Any, Any}","page":"Internals","title":"OscoNet.get_metrics_for_different_qvalue_thresholds","text":"Get true positive, false positive and false discovery rates\n\nArguments\n\nqvalues: q-value matrix (ngenes X ngenes)\nadj_matrix_true: binary adjacency matrix of true gene pairs (ngenes X ngenes)\nα_values: one dimensional vector for threshold values\n\nReturns\n\ntrue_positive_rate:\nfalse_positive_rate:\nfalse_discovery_rate:\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#OscoNet.get_permuted_cost-Tuple{Any, Int64}","page":"Internals","title":"OscoNet.get_permuted_cost","text":"Compute the minimum distance between gene x and the n-th random permutation of gene y, for a set of genes x, y ∈ X. \n\nArguments\n\ndata::Matrix: Matrix of size (ngenes x ncells), whose elements represent gene expression.\nn_permutations::Int: number of bootstrap permutations\n\nReturns\n\ncost_permuted::Array{Float64}: Array of size (ngenes x ngenes x n_permutations), whose (x,y,n)-th element\n\nrepresents the minimum distance between gene x and the n-th random permutation of gene y.\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#OscoNet.get_pvalues-Tuple{Any, Any}","page":"Internals","title":"OscoNet.get_pvalues","text":"Get p-values from the bootstrap hypothesis test\n\nArguments\n\ncost_unpermuted: A matrix of size (ngenes X ngenes) whose upper triangular (x,y)-th element defines the\n\ndistance between gene x and gene y\n\ncost_permuted: An array of size (ngenes X ngenes X n_permutations) whose upper triangular (x,y,n)-th element\n\ndefines the distance between gene x and the n-th permutation of gene y\n\nReturns\n\npvalues: A matrix of size (ngenes X ngenes)\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#OscoNet.istriangular-Tuple{Number}","page":"Internals","title":"OscoNet.istriangular","text":"istriangular(x::Number) -> Bool\n\nTest whether x is a triangular number.\n\nBy solving the quadratic formula for the the m-th triangular number n = m(m-1)/2, it can be shown that an integer is triangular if and only if 8n+1 is a perfect square. In other words, if and only if sqrt(8n+1) is an integer.\n\nExamples\n\njulia> using OscoNet\n\njulia> OscoNet.istriangular(45.0)\ntrue\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#OscoNet.qvalue_estimate-Tuple{Any}","page":"Internals","title":"OscoNet.qvalue_estimate","text":"Estimates q-values from p-values, see https://github.com/nfusi/qvalue\n\nArguments\n\npvalues: A vector of p-values\nn_tests: number of tests. If not specified n_tests = length(pvalues)\nπ₀: Estimate of the proportion of features that are truly null. If not specified,\n\nit's estimated as suggested in Storey and Tibshirani, 2003.\n\nReturns\n\nqvalues\nπ₀\n\n\n\n\n\n","category":"method"},{"location":"lib/internals/#OscoNet.vec_triu_loop-Union{Tuple{AbstractMatrix{T}}, Tuple{T}} where T","page":"Internals","title":"OscoNet.vec_triu_loop","text":"A function to return the elements of the (strict) upper triangle of a matrix, M, as a vector.\n\nExamples\n\njulia> using OscoNet\n\njulia> A = [1 2 3; 4 5 6; 7 8 9]\n3×3 Matrix{Int64}:\n 1  2  3\n 4  5  6\n 7  8  9\n\njulia> OscoNet.vec_triu_loop(A)\n3-element Vector{Int64}:\n 2\n 3\n 6\n\n\n\n\n\n","category":"method"},{"location":"examples/tutorial/#Tutorial","page":"Tutorial","title":"Tutorial","text":"","category":"section"},{"location":"lib/public/#Public-Documentation","page":"Public","title":"Public Documentation","text":"","category":"section"},{"location":"lib/public/","page":"Public","title":"Public","text":"Documentation for OscoNet.jl's public interface.","category":"page"},{"location":"lib/public/","page":"Public","title":"Public","text":"See the Internals section for documentation of internal functions.","category":"page"},{"location":"lib/public/#Index","page":"Public","title":"Index","text":"","category":"section"},{"location":"lib/public/","page":"Public","title":"Public","text":"Pages = [\"public.md\"]","category":"page"},{"location":"lib/public/#Public-Interface","page":"Public","title":"Public Interface","text":"","category":"section"},{"location":"lib/public/","page":"Public","title":"Public","text":"simulate_data\ntrue_adj_matrix\ncooscillation_distance\nfind_minimum_distance\nbootstrap_hypothesis_test\ncreate_edge_network","category":"page"},{"location":"lib/public/#OscoNet.simulate_data","page":"Public","title":"OscoNet.simulate_data","text":"Generate synthetic data. Reproduced from the original Oscope paper\n\nThis function can be used to simulate fake gene expression data with which to test the other functions.\n\nArguments\n\nhalf_group::Int=5: Half the size of each gene group. For example if half_group=3, each group will have 6 co-oscillating genes, 3 of which \n\nwill be strong oscillators and 3 weak (double the noise)\n\nn_genes::Int=20: Total number of genes\nn_cells::Int=1000: Total number of cells\nnoise_level::Int=1: Noise level index (1 to 6)\nn_groups::Int=1: Number of groups\n\nReturns\n\ndata::Matrix{<:AbstractFloat}: Simulated gene expression data with shape n_genes x n_cells \nΨ_g::Vector{<:AbstractFloat: Vector of phases for each gene\nω::Vector{<:AbstractFloat}: Vector of angular speeds for each gene\n\n\n\n\n\n","category":"function"},{"location":"lib/public/#OscoNet.true_adj_matrix","page":"Public","title":"OscoNet.true_adj_matrix","text":"Construct the ground truth adjacency matrix for a given numer of genes and ω vector. Intended for use with output from the simulate_data function.\n\nArguments\n\nn_genes::Integer: Total number of genes\nω::Vector{<:AbstractFloat}: Vector of angular speeds\n\nReturns\n\nadj_mat::Matrix{Bool}: Boolean matrix which is 1 if genes co-oscillate, and 0 otherwise\n\n\n\n\n\n","category":"function"},{"location":"lib/public/#OscoNet.cooscillation_distance","page":"Public","title":"OscoNet.cooscillation_distance","text":"Distance function for two co-oscillating genes across N cells. We assume genes have identical sinusoidal expression profiles, except for a phase shift Ψ.\n\nArguments\n\nX: Expression of gene X from N cells\nY: Expression of gene Y from the same N cells\ncosΨ::AbstractFloat: Cosine of the phase shift, Ψ\n\nReturns\n\nd::AbstractFloat: Distance between the two genes for a given Ψ\n\n\n\n\n\n","category":"function"},{"location":"lib/public/#OscoNet.find_minimum_distance","page":"Public","title":"OscoNet.find_minimum_distance","text":"Find the minimum distance between two genes X and Y, and the value of Ψ that minimises it.\n\nArguments\n\nX: Expression of gene X from N cells\nY: Expression of gene Y from the same N cells\n\nReturns\n\nminimum::AbstractFloat: Minimum distance between gene X and Y\nminimiser::AbstractFloat: Value of Ψ that minimises the distance\n\n\n\n\n\n","category":"function"},{"location":"lib/public/#OscoNet.bootstrap_hypothesis_test","page":"Public","title":"OscoNet.bootstrap_hypothesis_test","text":"Perform a non-parameteric bootstrap hypothesis test on gene expression data to  identify co-oscillating gene pairs.\n\nArguments\n\ndata::Matrix: Matrix of size (ngenes x ncells), whose elements represent gene expression.\nn_permutations::Int: number of bootstrap permutations\nα::AbstractFloat\n\nReturns\n\nadjacency_matrix:::\nqvalues:::\ncost:::\n\n\n\n\n\n","category":"function"},{"location":"lib/public/#OscoNet.create_edge_network","page":"Public","title":"OscoNet.create_edge_network","text":"Construct an undirected graph between gene pairs, to be used for identifying 'clusters' or communities of co-oscillating genes.\n\nArguments\n\nbootstrap_adj_mat:::\nweight_matrix:::\ngene_names:::\n\nReturns\n\nedge_network::DataFrame: \n\n\n\n\n\n","category":"function"},{"location":"","page":"Home","title":"Home","text":"CurrentModule = OscoNet","category":"page"},{"location":"#OscoNet.jl:-inferring-oscillatory-gene-networks","page":"Home","title":"OscoNet.jl: inferring oscillatory gene networks","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Documentation for OscoNet.","category":"page"}]
}
